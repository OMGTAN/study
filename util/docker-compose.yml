# Use postgres/example user/password credentials
version: '3.8'

services:

  # postgres:
  #   image: postgres:15
  #   container_name: pg15
  #   # restart: always
  #   environment:
  #     POSTGRES_PASSWORD: 123456
  #     POSTGRES_DB: blog
  #     PGDATA: /var/lib/postgresql/data/pgdata #数据存储文件夹
  #   volumes:
  #     - D:/Job/docker/pg/data:/var/lib/postgresql/data/  #将数据映射到对应的路径
  #     # - D:/Job/docker/pg/etc/localtime:/etc/localtime:ro #将外边时间直接挂载到容器内部，权限只读
  #     # - D:/Job/docker/pg/etc/timezone:/etc/timezone:ro #将外面的时间挂载到容器内部，权限只读，容器内不可修改
  #   ports:
  #     - 5432:5432
    
  mysql:
    image: mysql:8
    container_name: mysql8 
    # restart: always
    command:
    # MySQL8的密码验证方式默认是 caching_sha2_password，但是很多的连接工具还不支持该方式
    # 就需要手动设置下mysql的密码认证方式为以前的 mysql_native_password 方式
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
    environment:
      - "MYSQL_ROOT_PASSWORD=123456" # root用户的密码
      - "MYSQL_USER=user" # 创建新用户
      - "MYSQL_PASSWORD=123456" # 新用户的密码
      - "MYSQL_DATABASE=blog"
      - "TZ=Asia/Shanghai"
    volumes:
      - D:/Job/docker/mysql/data:/var/lib/mysql
      - D:/Job/docker/mysql/conf:/etc/mysql/conf.d
      - D:/Job/docker/mysql/logs:/logs
    ports:
      - 3306:3306
    
  redis:
    image: redis:7
    container_name: redis7
    # command: redis-server --requirepass yourpassword
    volumes:
      - D:/Job/docker/redis/data:/data 
      - D:/Job/docker/redis/config:/usr/local/etc/redis/ 
      - D:/Job/docker/redis/log:/logs 
    ports:
      - 6379:6379
      